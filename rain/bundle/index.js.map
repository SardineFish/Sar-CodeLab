{
  "version": 3,
  "sources": ["../zogra-renderer/node_modules/gl-matrix/cjs/common.js", "../zogra-renderer/node_modules/gl-matrix/cjs/mat2.js", "../zogra-renderer/node_modules/gl-matrix/cjs/mat2d.js", "../zogra-renderer/node_modules/gl-matrix/cjs/mat3.js", "../zogra-renderer/node_modules/gl-matrix/cjs/mat4.js", "../zogra-renderer/node_modules/gl-matrix/cjs/vec3.js", "../zogra-renderer/node_modules/gl-matrix/cjs/vec4.js", "../zogra-renderer/node_modules/gl-matrix/cjs/quat.js", "../zogra-renderer/node_modules/gl-matrix/cjs/quat2.js", "../zogra-renderer/node_modules/gl-matrix/cjs/vec2.js", "../zogra-renderer/node_modules/gl-matrix/cjs/index.js", "../zogra-renderer/src/types/vec3.ts", "../zogra-renderer/src/types/vec4.ts", "../zogra-renderer/src/types/vec2.ts", "../zogra-renderer/src/types/color.ts", "../zogra-renderer/src/types/math.ts", "../zogra-renderer/src/types/mat4.ts", "../zogra-renderer/src/types/quat.ts", "../zogra-renderer/src/types/ray.ts", "../zogra-renderer/src/types/rect.ts", "../zogra-renderer/src/types/types.ts", "../zogra-renderer/node_modules/reflect-metadata/Reflect.js", "../zogra-renderer/src/core/global.ts", "../zogra-renderer/src/core/texture-format.ts", "../zogra-renderer/src/utils/util.ts", "../zogra-renderer/src/core/event.ts", "../zogra-renderer/src/core/asset.ts", "../zogra-renderer/src/core/shader.ts", "../zogra-renderer/src/builtin-assets/shaders.ts", "../zogra-renderer/src/utils/image-sizing.ts", "../zogra-renderer/src/core/texture.ts", "../zogra-renderer/src/core/material.ts", "../zogra-renderer/src/core/material-type.ts", "../zogra-renderer/src/core/mesh.ts", "../zogra-renderer/src/core/render-target.ts", "../zogra-renderer/src/builtin-assets/materials.ts", "../zogra-renderer/src/builtin-assets/textures.ts", "../zogra-renderer/src/utils/mesh-builder.ts", "../zogra-renderer/src/builtin-assets/mesh.ts", "../zogra-renderer/src/builtin-assets/assets.ts", "../zogra-renderer/src/core/renderer.ts", "../zogra-renderer/src/core/lines.ts", "../zogra-renderer/src/core/buffer.ts", "../zogra-renderer/src/core/core.ts", "../zogra-renderer/src/engine/transform.ts", "../zogra-renderer/src/engine/entity.ts", "../zogra-renderer/src/engine/camera.ts", "../zogra-renderer/src/engine/render-object.ts", "../zogra-renderer/src/engine/light.ts", "../zogra-renderer/src/engine/scene.ts", "../zogra-renderer/src/render-pipeline/render-data.ts", "../zogra-renderer/src/render-pipeline/debug-layer.ts", "../zogra-renderer/src/render-pipeline/preview-renderer.ts", "../zogra-renderer/src/engine/zogra-engine.ts", "../zogra-renderer/src/engine/input.ts", "../zogra-renderer/src/engine/engine.ts", "../zogra-renderer/dist/render-pipeline/render-pipeline.js", "../zogra-renderer/src/render-pipeline/2d-default.ts", "../zogra-renderer/src/render-pipeline/rp.ts", "../zogra-renderer/src/plugins/assets-importer/types.ts", "../zogra-renderer/src/plugins/assets-importer/assets-importer.ts", "../zogra-renderer/src/plugins/texture-importer/texture-importer.ts", "../zogra-renderer/src/plugins/plugins.ts", "../zogra-renderer/src/utils/public-utils.ts", "../zogra-renderer/src/utils/index.ts", "../zogra-renderer/src/index.ts", "../src/index.ts", "../src/renderer.ts", "../src/blur.ts", "../src/random.ts", "../src/raindrop.ts", "../src/utils.ts", "../src/spawner.ts", "../src/simulator.ts"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }", null, null, null, null, null, null, null, null, null, null, "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=render-pipeline.js.map", null, null, null, null, null, null, null, null, null, "import { Rect, TextureData, vec2 } from \"zogra-renderer\";\r\nimport { RaindropRenderer, RenderOptions } from \"./renderer\";\r\nimport { RaindropSimulator, SimulatorOptions } from \"./simulator\";\r\nimport { Time } from \"./utils\";\r\n\r\ninterface Options extends SimulatorOptions, RenderOptions\r\n{\r\n}\r\n\r\nclass RaindropFX\r\n{\r\n    public options: Options;\r\n    public renderer: RaindropRenderer;\r\n    public simulator: RaindropSimulator;\r\n\r\n    private animHandle = 0;\r\n\r\n    constructor(options: Partial<Options> & {canvas: HTMLCanvasElement})\r\n    {\r\n        const canvas = options.canvas;\r\n        const defaultOptions: Options = {\r\n            // Simulator options\r\n            spawnInterval: [0.1, 0.1],\r\n            spawnSize: [60, 100],\r\n            spawnLimit: 2000,\r\n            viewport: new Rect(vec2.zero(), vec2(canvas.width, canvas.height)),\r\n            canvas: canvas,\r\n            width: canvas.width,\r\n            height: canvas.height,\r\n            background: \"\",\r\n            gravity: 2400,\r\n            slipRate: 0,\r\n            motionInterval: [0.1, 0.4],\r\n            colliderSize: 1,\r\n            trailDropDensity: 0.2,\r\n            trailDistance: [20, 30],\r\n            trailDropSize: [0.3, 0.5],\r\n            trailSpread: 0.6,\r\n            initialSpread: 0.5,\r\n            shrinkRate: 0.01,\r\n            velocitySpread: 0.3,\r\n            evaporate: 10,\r\n            xShifting: [0, 0.1],\r\n\r\n            // Rendering options\r\n            backgroundBlurSteps: 3,\r\n            mist: true,\r\n            mistColor: [0.01, 0.01, 0.01, 1],\r\n            mistBlurStep: 4,\r\n            mistTime: 10,\r\n            dropletsPerSeconds: 500,\r\n            dropletSize: [10, 30],\r\n            smoothRaindrop: [0.96, 0.99],\r\n            refractBase: 0.4,\r\n            refractScale: 0.6,\r\n            raindropCompose: \"smoother\",\r\n            raindropLightPos: [-1, 1, 2, 0],\r\n            raindropDiffuseLight: [0.2, 0.2, 0.2],\r\n            raindropShadowOffset: 0.8,\r\n            raindropEraserSize: [0.93, 1.0],\r\n            raindropSpecularLight: [0, 0, 0],\r\n            raindropSpecularShininess: 256,\r\n            raindropLightBump: 1,\r\n        };\r\n        this.options = { ...defaultOptions, ...options };\r\n\r\n        this.simulator = new RaindropSimulator(this.options);\r\n        this.renderer = new RaindropRenderer(this.options);\r\n    }\r\n    \r\n    async start()\r\n    {\r\n        await this.renderer.loadAssets();\r\n\r\n        let lastFrameTime = 0;\r\n        const update = (delay: number) =>\r\n        {\r\n            const dt = (delay - lastFrameTime) / 1000;\r\n            lastFrameTime = delay;\r\n            const time = <Time>{\r\n                dt: 0.03,\r\n                total: delay / 1000\r\n            };\r\n\r\n            this.update(time);\r\n\r\n            this.animHandle = requestAnimationFrame(update);\r\n        };\r\n\r\n        this.animHandle =  requestAnimationFrame(update);\r\n    }\r\n    \r\n    stop()\r\n    {\r\n        cancelAnimationFrame(this.animHandle);\r\n    }\r\n\r\n    resize(width: number, height: number)\r\n    {\r\n        this.options.width = width;\r\n        this.options.height = height;\r\n        this.options.viewport = new Rect(vec2.zero(), vec2(width, height));\r\n        this.renderer.resize();\r\n    }\r\n\r\n    async setBackground(background: string | TextureData)\r\n    {\r\n        this.renderer.options.background = background;\r\n        await this.renderer.reloadBackground();\r\n    }\r\n    \r\n    private update(time: Time)\r\n    {\r\n        this.simulator.update(time);\r\n\r\n        this.renderer.render(this.simulator.raindrops, time);\r\n    }\r\n\r\n}\r\n\r\nexport = RaindropFX;", "import\r\n{\r\n    Blending, Color, DepthTest, mat4, MaterialFromShader, MeshBuilder, quat, RenderBuffer,\r\n    RenderTarget, RenderTexture, Shader, shaderProp, SimpleTexturedMaterial, Texture, Texture2D, TextureData,\r\n    TextureFormat, TextureImporter, Utils, vec2, vec4, WrapMode, ZograRenderer\r\n} from \"zogra-renderer\";\r\nimport raindropTexture from \"../assets/img/raindrop.png\";\r\nimport { BlurRenderer } from \"./blur\";\r\nimport { RainDrop } from \"./raindrop\";\r\nimport { randomRange } from \"./random\";\r\nimport defaultFrag from \"./shader/2d-frag.glsl\";\r\nimport defaultVert from \"./shader/2d-vert.glsl\";\r\nimport mistBackground from \"./shader/bg-mist.glsl\";\r\nimport composeFrag from \"./shader/compose.glsl\";\r\nimport dropletVert from \"./shader/droplet-vert.glsl\";\r\nimport dropletFrag from \"./shader/droplet.glsl\";\r\nimport raindropErase from \"./shader/erase.glsl\";\r\nimport raindropFrag from \"./shader/raindrop-frag.glsl\";\r\nimport raindropVert from \"./shader/raindrop-vert.glsl\";\r\nimport { Time } from \"./utils\";\r\n\r\n\r\nclass RaindropMaterial extends MaterialFromShader(new Shader(raindropVert, raindropFrag, {\r\n    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor],\r\n    depth: DepthTest.Disable,\r\n    zWrite: false,\r\n    attributes: {\r\n        size: \"aSize\",\r\n        modelMatrix: \"aModelMatrix\",\r\n    }\r\n}))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    texture: Texture | null = null;\r\n\r\n    @shaderProp(\"uSize\", \"float\")\r\n    size: number = 0;\r\n}\r\n\r\nclass DropletMaterial extends MaterialFromShader(new Shader(dropletVert, dropletFrag, {\r\n    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor],\r\n    depth: DepthTest.Disable,\r\n    zWrite: false,\r\n    attributes: {\r\n        size: \"aSize\",\r\n        modelMatrix: \"aModelMatrix\",\r\n    }\r\n}))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    texture: Texture | null = null;\r\n\r\n    @shaderProp(\"uSpawnRect\", \"vec4\")\r\n    spawnRect: vec4 = vec4(0, 0, 1, 1);\r\n\r\n    @shaderProp(\"uSizeRange\", \"vec2\")\r\n    sizeRange: vec2 = vec2(10, 20);\r\n\r\n    @shaderProp(\"uSeed\", \"float\")\r\n    seed: number = 1;\r\n}\r\n\r\nclass FinalCompose extends MaterialFromShader(new Shader(defaultVert, composeFrag, {\r\n    blend: [Blending.SrcAlpha, Blending.OneMinusSrcAlpha],\r\n    depth: DepthTest.Disable,\r\n    zWrite: false\r\n}))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    background: Texture | null = null;\r\n\r\n    @shaderProp(\"uBackgroundSize\", \"vec4\")\r\n    backgroundSize: vec4 = vec4.one();\r\n\r\n    @shaderProp(\"uRaindropTex\", \"tex2d\")\r\n    raindropTex: Texture | null = null;\r\n\r\n    @shaderProp(\"uDropletTex\", \"tex2d\")\r\n    dropletTex: Texture | null = null;\r\n\r\n    @shaderProp(\"uMistTex\", \"tex2d\")\r\n    mistTex: Texture | null = null;\r\n\r\n    @shaderProp(\"uSmoothRaindrop\", \"vec2\")\r\n    smoothRaindrop: vec2 = vec2(0.95, 1.0);\r\n\r\n    @shaderProp(\"uRefractParams\", \"vec2\")\r\n    refractParams: vec2 = vec2(0.4, 0.6);\r\n\r\n    @shaderProp(\"uLightPos\", \"vec4\")\r\n    lightPos: vec4 = vec4(.5, .5, 2, 1);\r\n\r\n    @shaderProp(\"uDiffuseColor\", \"color\")\r\n    diffuseLight: Color = new Color(0.3, 0.3, 0.3, 0.8);\r\n\r\n    @shaderProp(\"uSpecularParams\", \"vec4\")\r\n    specularParams: vec4 = vec4(1, 1, 1, 32);\r\n\r\n    @shaderProp(\"uBump\", \"float\")\r\n    bump: number = 1;\r\n}\r\n\r\nclass RaindropErase extends SimpleTexturedMaterial(new Shader(defaultVert, raindropErase, {\r\n    // blend: [Blending.Zero, Blending.OneMinusSrcAlpha],\r\n    blendRGB: [Blending.Zero, Blending.OneMinusSrcAlpha],\r\n    blendAlpha: [Blending.Zero, Blending.OneMinusSrcAlpha],\r\n}))\r\n{\r\n    @shaderProp(\"uEraserSmooth\", \"vec2\")\r\n    eraserSize: vec2 = vec2(0.93, 1.0);\r\n}\r\n\r\nconst MistAccumulate = SimpleTexturedMaterial(new Shader(defaultVert, defaultFrag, {\r\n    blend: [Blending.One, Blending.One]\r\n}));\r\n\r\nclass MistBackgroundCompose extends SimpleTexturedMaterial(new Shader(defaultVert, mistBackground, {\r\n    blend: [Blending.SrcAlpha, Blending.OneMinusSrcAlpha]\r\n}))\r\n{\r\n    @shaderProp(\"uMistColor\", \"color\")\r\n    mistColor: Color = new Color(0.01, 0.01, 0.01, 1);\r\n\r\n    @shaderProp(\"uMistTex\", \"tex2d\")\r\n    mistTex: Texture | null = null;\r\n}\r\n\r\n\r\nexport interface RenderOptions\r\n{\r\n    canvas: HTMLCanvasElement;\r\n    width: number;\r\n    height: number;\r\n    background: TextureData | string;\r\n    /**\r\n     * Background blur steps used for background & raindrop refract image.\r\n     * Value should be integer from 0 to log2(backgroundSize).\r\n     * Recommend 3 or 4\r\n     */\r\n    backgroundBlurSteps: number;\r\n    /**\r\n     * Enable blurry mist effect\r\n     */\r\n    mist: boolean;\r\n    /**\r\n     * [r, g, b, a] mist color, each component in range (0..1). \r\n     * The alpha is used for whole mist layer.\r\n     * Recommend [0.01, 0.01, 0.01, 1]\r\n     */\r\n    mistColor: [number, number, number, number];\r\n    /**\r\n     * Describe how long takes mist alpha from 0 to 1\r\n     */\r\n    mistTime: number;\r\n    /**\r\n     * Background blur steps used for mist.\r\n     * Value should be integer from 0 to log2(backgroundSize).\r\n     * Recommended value = backgroundBlurSteps + 1\r\n     */\r\n    mistBlurStep: number;\r\n    /**\r\n     * Tiny droplet spawn rate.\r\n     */\r\n    dropletsPerSeconds: number;\r\n    /**\r\n     * Random size range of tiny drplets.\r\n     * Recommend [10, 30]\r\n     */\r\n    dropletSize: [number, number];\r\n    /**\r\n     * Smooth range [a, b] of raindrop edge.\r\n     * Recommend [0.96, 1.0]\r\n     * \r\n     * Larger range of (b - a) have smoother edge.\r\n     * \r\n     * Lower value b makes raindrop larger with a distort edge\r\n     */\r\n    smoothRaindrop: [number, number];\r\n    /**\r\n     * Refract uv scale of minimal raindrop.\r\n     * Recommend in range (0.2, 0.6)\r\n     */\r\n    refractBase: number,\r\n    /**\r\n     * Refract uv scaled by raindrop size.\r\n     * Rocommend in range (0.4, 0.8)\r\n     */\r\n    refractScale: number,\r\n    /**\r\n     * Describe how raindrops are composed.\r\n     * \r\n     * - `smoother` compose raindrops normal with 'exclusion' blend mode\r\n     * \r\n     * - `harder` compose raindrops normal with 'normal' blend mode\r\n     */\r\n    raindropCompose: \"smoother\" | \"harder\"\r\n    /**\r\n     * Screen space (0..1) light direction or position.\r\n     * Recommend [-1, 1, 2, 0]\r\n     * \r\n     * - Use [x, y, z, 0] to indicate a direction\r\n     * \r\n     * - Use [x, y, z, 1] to indicate a position\r\n     */\r\n    raindropLightPos: [number, number, number, number];\r\n    /**\r\n     * Lambertian diffuse lighting Color.\r\n     * Recommend [0.3, 0.3, 0.3]\r\n     */\r\n    raindropDiffuseLight: [number, number, number];\r\n    /**\r\n     * Higher value makes more shadow.\r\n     * Recommend in range (0.6..0.8)\r\n     */\r\n    raindropShadowOffset: number;\r\n    /**\r\n     * Similar to `smoothRaindrop`. Used to erase droplets & mist.\r\n     * Recommended value [0.93, 1.0]\r\n     */\r\n    raindropEraserSize: [number, number];\r\n    /**\r\n     * Specular light clor.\r\n     * Recommend disable it with [0, 0, 0] :)\r\n     */\r\n    raindropSpecularLight: [number, number, number];\r\n    /**\r\n     * Blinn-Phong exponent representing shininess.\r\n     * Value from 0 to 1024 is ok\r\n     */\r\n    raindropSpecularShininess: number;\r\n    /**\r\n     * Will apply to calculate screen space normal for lighting.\r\n     * Larger value makes raindrops looks more flat.\r\n     * Recommend in range (0.3..1)\r\n     */\r\n    raindropLightBump: number,\r\n\r\n}\r\n\r\nexport class RaindropRenderer\r\n{\r\n    renderer: ZograRenderer;\r\n    options: RenderOptions;\r\n\r\n    private raindropTex: Texture2D = null as any;\r\n    private originalBackground: Texture2D = null as any;\r\n    private background: RenderTexture;\r\n    private raindropComposeTex: RenderTexture;\r\n    private dropletTexture: RenderTexture;\r\n    private mistTexture: RenderTexture;\r\n    private blurryBackground: RenderTexture;\r\n    private mistBackground: RenderTexture;\r\n    private blurRenderer: BlurRenderer;\r\n\r\n    private matrlCompose = new FinalCompose();\r\n    private matrlRaindrop = new RaindropMaterial();\r\n    private matrlDroplet = new DropletMaterial();\r\n    private matrlErase = new RaindropErase();\r\n    private matrlMist = new MistAccumulate();\r\n    private matrlMistCompose = new MistBackgroundCompose();\r\n\r\n    private projectionMatrix: mat4;\r\n    private mesh = MeshBuilder.quad();\r\n    private raindropBuffer = new RenderBuffer({\r\n        size: \"float\",\r\n        modelMatrix: \"mat4\",\r\n    }, 3000);\r\n\r\n    // deubg: DebugLayerRenderer = new DebugLayerRenderer();\r\n\r\n    constructor(options: RenderOptions)\r\n    {\r\n        this.renderer = new ZograRenderer(options.canvas);\r\n        this.renderer.gl.getExtension(\"EXT_color_buffer_float\");\r\n        this.options = options;\r\n\r\n        this.projectionMatrix = mat4.ortho(0, options.width, 0, options.height, 1, -1);\r\n        this.raindropComposeTex = new RenderTexture(options.width, options.height, false);\r\n        this.background = new RenderTexture(options.width, options.height, false);\r\n        this.dropletTexture = new RenderTexture(options.width, options.height, false);\r\n        this.blurryBackground = new RenderTexture(options.width, options.height, false);\r\n        this.mistBackground = new RenderTexture(options.width, options.height, false);\r\n        this.mistTexture = new RenderTexture(options.width, options.height, false, TextureFormat.R16F);\r\n\r\n        this.blurRenderer = new BlurRenderer(this.renderer);\r\n\r\n        this.renderer.setViewProjection(mat4.identity(), this.projectionMatrix);\r\n    }\r\n    async loadAssets()\r\n    {\r\n        // this.renderer.blit(null, RenderTarget.CanvasTarget);\r\n        this.raindropTex = await TextureImporter\r\n            .buffer(raindropTexture)\r\n            .then(t=>t.tex2d());\r\n\r\n        this.matrlRaindrop.texture = this.raindropTex;\r\n        this.matrlDroplet.texture = this.raindropTex;\r\n\r\n        await this.reloadBackground();\r\n\r\n    }\r\n    async reloadBackground()\r\n    {\r\n        this.originalBackground?.destroy();\r\n        if (typeof (this.options.background) === \"string\")\r\n        {\r\n            this.originalBackground = await TextureImporter\r\n                .url(this.options.background)\r\n                .then(t => t.tex2d({ wrapMpde: WrapMode.Clamp }));\r\n\r\n            this.originalBackground.wrapMode = WrapMode.Clamp;\r\n            this.originalBackground.updateParameters();\r\n        }\r\n        else\r\n        {\r\n            this.originalBackground = new Texture2D();\r\n            this.originalBackground.setData(this.options.background);\r\n            this.originalBackground.updateParameters();\r\n        }\r\n        const [srcRect, dstRect] = Utils.imageResize(this.originalBackground.size, this.background.size, Utils.ImageSizing.Cover);\r\n        this.renderer.blit(this.originalBackground, this.background, this.renderer.assets.materials.blitCopy, srcRect, dstRect);\r\n        this.background.generateMipmap();\r\n\r\n        this.blurBackground();\r\n    }\r\n    resize()\r\n    {\r\n        this.renderer.setSize(this.options.width, this.options.height);\r\n        this.projectionMatrix = mat4.ortho(0, this.options.width, 0, this.options.height, 1, -1);\r\n        this.renderer.setViewProjection(mat4.identity(), this.projectionMatrix);\r\n\r\n        this.raindropComposeTex.resize(this.options.width, this.options.height);\r\n        this.background.resize(this.options.width, this.options.height);\r\n        this.dropletTexture.resize(this.options.width, this.options.height);\r\n        this.blurryBackground.resize(this.options.width, this.options.height);\r\n        this.mistBackground.resize(this.options.width, this.options.height);\r\n        this.mistTexture.resize(this.options.width, this.options.height);\r\n\r\n        const [srcRect, dstRect] = Utils.imageResize(this.originalBackground.size, this.background.size, Utils.ImageSizing.Cover);\r\n        this.renderer.blit(this.originalBackground, this.background, this.renderer.assets.materials.blitCopy, srcRect, dstRect);\r\n        this.background.generateMipmap();\r\n\r\n        this.blurBackground();\r\n    }\r\n    render(raindrops: RainDrop[], time: Time)\r\n    {\r\n        this.drawDroplet(time);\r\n        this.drawMist(time.dt);\r\n        this.drawRaindrops(raindrops);\r\n\r\n        this.renderer.setRenderTarget(RenderTarget.CanvasTarget);\r\n        this.renderer.clear(Color.black);\r\n\r\n        this.drawBackground();\r\n\r\n        this.matrlCompose.background = this.blurryBackground;\r\n        this.matrlCompose.backgroundSize = vec4(this.options.width, this.options.height, 1 / this.options.width, 1 / this.options.height);\r\n        this.matrlCompose.raindropTex = this.raindropComposeTex;\r\n        this.matrlCompose.dropletTex = this.dropletTexture;\r\n        this.matrlCompose.mistTex = this.mistTexture;\r\n        this.matrlCompose.smoothRaindrop = vec2(...this.options.smoothRaindrop);\r\n        this.matrlCompose.refractParams = vec2(this.options.refractBase, this.options.refractScale);\r\n        this.matrlCompose.lightPos = vec4(...this.options.raindropLightPos);\r\n        this.matrlCompose.diffuseLight = new Color(...this.options.raindropDiffuseLight, this.options.raindropShadowOffset);\r\n        this.matrlCompose.specularParams = vec4(...this.options.raindropSpecularLight, this.options.raindropSpecularShininess);\r\n        this.matrlCompose.bump = this.options.raindropLightBump;\r\n\r\n        this.renderer.blit(null, RenderTarget.CanvasTarget, this.matrlCompose);\r\n    }\r\n\r\n    private blurBackground()\r\n    {\r\n        // Blur background with N steps downsample + N steps upsample\r\n        if (!this.options.mist)\r\n        {\r\n            this.blurRenderer.blur(this.background, this.options.backgroundBlurSteps, this.blurryBackground);\r\n        }\r\n        else\r\n        {\r\n            // Downsample to max steps\r\n            // Then upsample from a larger texture before smaller texture to avoid override\r\n            this.blurRenderer.init(this.background);\r\n            this.blurRenderer.downSample(this.background, Math.max(this.options.backgroundBlurSteps, this.options.mistBlurStep));\r\n\r\n            if (this.options.backgroundBlurSteps === this.options.mistBlurStep)\r\n            {\r\n                this.blurRenderer.upSample(this.options.backgroundBlurSteps, this.blurryBackground);\r\n                this.renderer.blit(this.blurryBackground, this.mistBackground);\r\n            }\r\n            else if (this.options.mistBlurStep > this.options.backgroundBlurSteps)\r\n            {\r\n                this.blurRenderer.upSample(this.options.backgroundBlurSteps, this.blurryBackground);\r\n                this.blurRenderer.upSample(this.options.mistBlurStep, this.mistBackground);\r\n            }\r\n            else\r\n            {\r\n                this.blurRenderer.upSample(this.options.mistBlurStep, this.mistBackground);\r\n                this.blurRenderer.upSample(this.options.backgroundBlurSteps, this.blurryBackground);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawMist(dt: number)\r\n    {\r\n        if (!this.options.mist)\r\n            return;\r\n        this.matrlMist.color.r = dt / this.options.mistTime;\r\n        this.renderer.blit(this.renderer.assets.textures.default, this.mistTexture, this.matrlMist);\r\n    }\r\n\r\n    private drawBackground()\r\n    {\r\n        this.renderer.blit(this.blurryBackground, RenderTarget.CanvasTarget);\r\n\r\n        if (this.options.mist)\r\n        {\r\n            this.matrlMistCompose.mistTex = this.mistTexture;\r\n            this.matrlMistCompose.texture = this.mistBackground;\r\n            this.matrlMistCompose.mistColor = new Color(...this.options.mistColor);\r\n            this.renderer.blit(this.mistBackground, RenderTarget.CanvasTarget, this.matrlMistCompose);\r\n        }\r\n\r\n    }\r\n\r\n    private drawRaindrops(raindrops: RainDrop[])\r\n    {\r\n        if (raindrops.length > this.raindropBuffer.length)\r\n            this.raindropBuffer.resize(this.raindropBuffer.length * 2);\r\n        this.renderer.setRenderTarget(this.raindropComposeTex);\r\n        this.renderer.clear(Color.black.transparent());\r\n        for (let i = 0; i < raindrops.length; i++)\r\n        {\r\n            const raindrop = raindrops[i];\r\n            const model = mat4.rts(quat.identity(), raindrop.pos.toVec3(), raindrop.size.toVec3(1));\r\n            this.raindropBuffer[i].modelMatrix.set(model);\r\n            this.raindropBuffer[i].size[0] = raindrop.size.x / 100;\r\n        }\r\n        switch (this.options.raindropCompose)\r\n        {\r\n            case \"smoother\":\r\n                this.matrlRaindrop.shader.setPipelineStates({\r\n                    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor]\r\n                });\r\n                this.matrlDroplet.shader.setPipelineStates({\r\n                    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor],\r\n                });\r\n                break;\r\n            case \"harder\":\r\n                this.matrlRaindrop.shader.setPipelineStates({\r\n                    blendRGB: [Blending.One, Blending.OneMinusSrcAlpha]\r\n                });\r\n                this.matrlDroplet.shader.setPipelineStates({\r\n                    blendRGB: [Blending.One, Blending.OneMinusSrcAlpha],\r\n                });\r\n                break;\r\n        }\r\n        this.renderer.drawMeshInstance(this.mesh, this.raindropBuffer, this.matrlRaindrop, raindrops.length);\r\n        this.matrlErase.eraserSize = vec2(...this.options.raindropEraserSize);\r\n        this.renderer.blit(this.raindropComposeTex, this.dropletTexture, this.matrlErase);\r\n        if (this.options.mist)\r\n            this.renderer.blit(this.raindropComposeTex, this.mistTexture, this.matrlErase);\r\n    }\r\n\r\n    private drawDroplet(time: Time)\r\n    {\r\n        this.renderer.setRenderTarget(this.dropletTexture);\r\n        const count = this.options.dropletsPerSeconds * time.dt;\r\n        this.matrlDroplet.spawnRect = vec4(0, 0, this.options.width, this.options.height);\r\n        this.matrlDroplet.sizeRange = vec2(...this.options.dropletSize);\r\n        this.matrlDroplet.seed = randomRange(0, 133);\r\n        this.renderer.drawMeshProceduralInstance(this.mesh, this.matrlDroplet, count);\r\n    }\r\n}", "import { div, FilterMode, MaterialFromShader, mul, RenderTexture, Shader, shaderProp, Texture, Texture2D, TextureResizing, vec2, vec4, WrapMode, ZograRenderer } from \"zogra-renderer\";\r\nimport { TextureFormat } from \"zogra-renderer/dist/core/texture-format\";\r\nimport vert from \"./shader/2d-vert.glsl\";\r\nimport frag from \"./shader/blur.glsl\";\r\n\r\nclass MaterialBlur extends MaterialFromShader(new Shader(vert, frag))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    texture: Texture | null = null;\r\n\r\n    @shaderProp(\"uTexSize\", \"vec4\")\r\n    textureSize: vec4 = vec4.one();\r\n\r\n    @shaderProp(\"uSampleOffset\", \"float\")\r\n    sampleOffset: number = 1;\r\n}\r\n\r\nexport class BlurRenderer\r\n{\r\n    renderer: ZograRenderer;\r\n    steps: RenderTexture[] = [];\r\n    mateiralBlur = new MaterialBlur();\r\n\r\n    constructor(renderer: ZograRenderer)\r\n    {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    init(texture: Texture)\r\n    {\r\n        if (!this.steps[0])\r\n        {\r\n            this.steps[0] = new RenderTexture(texture.width, texture.height, false, texture.format, texture.filterMode);\r\n            this.steps[0].wrapMode = WrapMode.Clamp;\r\n            this.steps[0].updateParameters();\r\n        }\r\n        if (this.steps[0].width !== texture.width || this.steps[0].height !== texture.height)\r\n            this.steps[0].resize(texture.width, texture.height, TextureResizing.Discard);\r\n    }\r\n\r\n    blur(texture: Texture, iteration: number = 4, output = this.steps[0])\r\n    {\r\n        if (!this.steps[0])\r\n            this.steps[0] = new RenderTexture(texture.width, texture.height, false, texture.format, texture.filterMode);   \r\n        output = output || this.steps[0];\r\n\r\n        if (this.steps[0].width !== texture.width || this.steps[0].height !== texture.height)\r\n            this.steps[0].resize(texture.width, texture.height, TextureResizing.Discard);\r\n        \r\n        this.downSample(texture, iteration);\r\n\r\n        return this.upSample(iteration, output);\r\n    }\r\n\r\n    downSample(input: Texture, iteration: number)\r\n    {\r\n        for (let i = 1; i <= iteration; i++)\r\n        {\r\n            const downSize = vec2.floor(div(input.size, vec2(2)));\r\n            if (!this.steps[i])\r\n            {\r\n                this.steps[i] = new RenderTexture(downSize.x, downSize.y, false, TextureFormat.RGBA, FilterMode.Linear);\r\n                this.steps[i].wrapMode = WrapMode.Clamp;\r\n                this.steps[i].updateParameters();\r\n            }\r\n\r\n            const output = this.steps[i];\r\n            if (output.width !== downSize.x || output.height !== downSize.y)\r\n                output.resize(downSize.x, downSize.y, TextureResizing.Discard);\r\n\r\n            this.mateiralBlur.texture = input;\r\n            this.mateiralBlur.textureSize = vec4(input.width, input.height, 1 / input.width, 1 / input.height);\r\n            this.mateiralBlur.sampleOffset = 1;\r\n            this.renderer.blit(input, output, this.mateiralBlur);\r\n            input = output;\r\n        }\r\n    }\r\n\r\n    upSample(iteration: number, finalOutput = this.steps[0])\r\n    {\r\n        let input = this.steps[iteration];\r\n        for (let i = iteration - 1; i >= 0; i--)\r\n        {\r\n            const upSize = mul(input.size, vec2(2));\r\n            if (!this.steps[i])\r\n            {\r\n                this.steps[i] = new RenderTexture(upSize.x, upSize.y, false, TextureFormat.RGBA, FilterMode.Linear);\r\n                this.steps[i].wrapMode = WrapMode.Clamp;\r\n                this.steps[i].updateParameters();\r\n            }\r\n\r\n            const output = i === 0 ? finalOutput : this.steps[i];\r\n\r\n            this.mateiralBlur.texture = input;\r\n            this.mateiralBlur.textureSize = vec4(input.width, input.height, 1 / input.width, 1 / input.height);\r\n            this.mateiralBlur.sampleOffset = 1;\r\n            this.renderer.blit(input, output, this.mateiralBlur);\r\n            input = output;\r\n        }\r\n        return input;\r\n    }\r\n}", "import { distance, mul, Rect, vec2, vec3, Vector2 } from \"zogra-renderer\";\r\n\r\nexport interface JitterOption<T extends number | vec2 | [number, number]>\r\n{\r\n    base: T;\r\n    jitter: T;\r\n}\r\n\r\nexport function randomJittered<T extends number | vec2>(option: JitterOption<T>): T\r\n{\r\n    if (typeof (option.base) === \"number\")\r\n        return option.base + (option.jitter as number) * (Math.random() * 2 - 1) as T;\r\n    else\r\n    {\r\n        let opt = option as JitterOption<[number, number]>;\r\n        return vec2(\r\n            opt.base[0] + (opt.jitter[0]) * (Math.random() * 2 - 1),\r\n            opt.base[1] + (opt.jitter[1]) * (Math.random() * 2 - 1)\r\n        ) as T;\r\n    }\r\n}\r\nexport function randomInRect(rect: Rect): vec2\r\n{\r\n    return vec2(Math.random(), Math.random()).mul(rect.size).plus(rect.min);\r\n}\r\n\r\n// https://www.shadertoy.com/view/ltB3zD\r\nconst PHI = 1.61803398874989484820459; // \u03A6 = Golden Ratio \r\nfunction fract(x: number)\r\n{\r\n    return x - Math.floor(x);\r\n}\r\n/**\r\n * Generate noise in [-1, 1]\r\n * @param xy Should be non zero integer\r\n * @param seed Non zero integer\r\n */\r\nexport function goldNoise(xy: vec2, seed: number)\r\n{\r\n    return fract(Math.tan(distance(mul(xy, vec2(PHI)), xy) * seed) * xy.x);\r\n}\r\n\r\nexport function tentNoise(t: number, seed: number)\r\n{\r\n    let frac = fract(t);\r\n    let grid = Math.floor(t += seed);\r\n}\r\n\r\n/**\r\n * Get random value in (-1, 1)\r\n */\r\nexport function random()\r\n{\r\n    return Math.random() * 2 - 1;\r\n}\r\n\r\nexport function randomRange(min: number, max: number)\r\n{\r\n    return Math.random() * (max - min) + min;\r\n}", "import { div, mul, plus, vec2, Vector2 } from \"zogra-renderer\";\r\nimport { random, randomRange } from \"./random\";\r\nimport { CollisionGrid, RaindropSimulator } from \"./simulator\";\r\nimport { lerp, Time } from \"./utils\";\r\n\r\nexport class RainDrop\r\n{\r\n    pos: vec2;\r\n    density: number = 1;\r\n    velocity: vec2 = vec2.zero();\r\n    spread: vec2;\r\n    destroied = false;\r\n    parent?: RainDrop;\r\n    grid?: CollisionGrid;\r\n    gridIdx?: number;\r\n\r\n    private _mass: number = 0;\r\n    private _size: vec2 = vec2.zero();\r\n    private simulator: RaindropSimulator;\r\n    private resistance = 0;\r\n    private shifting = 0;\r\n    private lastTrailPos: vec2;\r\n    private nextTrailDistance: number;\r\n\r\n    private nextRandomTime = 0;\r\n\r\n    constructor(simulator: RaindropSimulator, pos: vec2, size: number, density = 1)\r\n    {\r\n        this.pos = pos;\r\n        this.simulator = simulator;\r\n        this.density = density;\r\n\r\n        this.lastTrailPos = pos.clone();\r\n        this.nextTrailDistance = randomRange(...simulator.options.trailDistance);\r\n\r\n        this.spread = vec2(simulator.options.initialSpread);\r\n\r\n        this.mass = (size * density) ** 2;\r\n    }\r\n\r\n    get mass() { return this._mass; }\r\n    set mass(m: number)\r\n    {\r\n        this._mass = m;\r\n        const sqrtM = Math.sqrt(m) / this.density;\r\n        this._size.x = (this.spread.x + 1) * sqrtM;\r\n        this._size.y = (this.spread.y + 1) * sqrtM;\r\n        // this._size = mul(plus(this.spread, vec2.one()), Math.sqrt(m));\r\n    }\r\n    \r\n    get size(): vec2\r\n    {\r\n        return this._size;\r\n    }\r\n\r\n    get mergeDistance()\r\n    {\r\n        return this.size.x * (1 + this.spread.x) * 0.16 * this.simulator.options.colliderSize;\r\n    }\r\n\r\n    get options() { return this.simulator.options }\r\n\r\n    updateRaindrop(time: Time)\r\n    {\r\n        if (this.nextRandomTime <= time.total)\r\n        {\r\n            this.nextRandomTime = time.total + randomRange(...this.simulator.options.motionInterval)\r\n            this.randomMotion();\r\n        }\r\n\r\n        this.mass -= this.simulator.options.evaporate * time.dt;\r\n        const force = this.options.gravity * this.mass - this.resistance;\r\n        const acceleration = force / this.mass;\r\n        this.velocity.y -= acceleration * time.dt;\r\n        if (this.velocity.y > 0)\r\n            this.velocity.y = 0;\r\n        this.velocity.x = Math.abs(this.velocity.y) * this.shifting;\r\n        this.pos.x += this.velocity.x * time.dt;\r\n        this.pos.y += this.velocity.y * time.dt;\r\n        // this.pos.plus(mul(this.velocity, vec2(time.dt)));\r\n\r\n        const spreadByVelocity = this.simulator.options.velocitySpread * 2 * Math.atan(Math.abs(this.velocity.y * 0.005)) / Math.PI;\r\n        this.spread.y = Math.max(this.spread.y, spreadByVelocity);\r\n        this.spread.x *= Math.pow(this.simulator.options.shrinkRate, time.dt);\r\n        this.spread.y *= Math.pow(this.simulator.options.shrinkRate, time.dt);\r\n        // this.spread.y +=  Math.abs(this.velocity.y) * 0.0001;\r\n\r\n        if (Vector2.distanceSquared(this.lastTrailPos, this.pos) > this.nextTrailDistance * this.nextTrailDistance)\r\n        {\r\n            this.split();\r\n        }\r\n    }\r\n\r\n    split()\r\n    {\r\n        // return;\r\n        if (this.mass < 1000)\r\n            return;\r\n        let size = this.size.x * randomRange(...this.simulator.options.trailDropSize);\r\n        const pos = plus(vec2(randomRange(-5, 5), this.size.y / 4), this.pos);\r\n        let trailDrop = this.simulator.spawner.spawn(pos.clone(), size, this.simulator.options.trailDropDensity);\r\n        trailDrop.spread = vec2(0.1, Math.abs(this.velocity.y) * 0.01 * this.options.trailSpread);\r\n        trailDrop.parent = this;\r\n        this.mass -= trailDrop.mass;\r\n        this.simulator.add(trailDrop);\r\n        this.lastTrailPos = this.pos.clone();\r\n        this.nextTrailDistance = randomRange(...this.simulator.options.trailDistance);\r\n    }\r\n\r\n    randomMotion()\r\n    {\r\n        const maxResistance = lerp(...this.simulator.options.spawnSize, 1 - this.simulator.options.slipRate) ** 2 * 4;\r\n        this.resistance = randomRange(0, 1) * this.options.gravity * maxResistance;\r\n        this.shifting = random() * randomRange(...this.simulator.options.xShifting);\r\n    }\r\n\r\n    merge(target: RainDrop)\r\n    {\r\n        const selfMomentum = mul(this.velocity, this.mass);\r\n        const targetMomentum = mul(target.velocity, target.mass);\r\n        const momentum = plus(selfMomentum, targetMomentum);\r\n        this.mass += target.mass;\r\n        this.velocity = div(momentum, this.mass);\r\n    }\r\n}", "export interface Time\r\n{\r\n    dt: number,\r\n    total: number,\r\n}\r\n\r\nexport function clamp(x: number, l: number, h: number)\r\n{\r\n    return Math.min(Math.max(x, l), h);\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number)\r\n{\r\n    return a + (b - a) * t;\r\n}", "import { Rect, vec2 } from \"zogra-renderer\";\r\nimport { RainDrop } from \"./raindrop\";\r\nimport { randomJittered, JitterOption, randomInRect, randomRange } from \"./random\";\r\nimport { RaindropSimulator, SimulatorOptions } from \"./simulator\";\r\n\r\nexport class Spawner\r\n{\r\n\r\n\r\n    currentTime = 0;\r\n    nextSpawn = 0;\r\n\r\n    private simulator: RaindropSimulator;\r\n\r\n    constructor(simulator: RaindropSimulator, options: SimulatorOptions)\r\n    {\r\n\r\n        this.simulator = simulator;\r\n    }\r\n    \r\n    get interval() { return this.simulator.options.spawnInterval }\r\n    get size() { return this.simulator.options.spawnSize }\r\n    get spawnRect() { return this.simulator.options.viewport }\r\n\r\n    update(dt: number): this\r\n    {\r\n        this.currentTime += dt;\r\n        return this;\r\n    }\r\n    *trySpawn(): Iterable<RainDrop>\r\n    {\r\n        while (this.currentTime >= this.nextSpawn)\r\n        {\r\n            const size = randomRange(...this.size);\r\n            const pos = randomInRect(this.spawnRect);\r\n            this.nextSpawn += randomRange(...this.interval);\r\n            yield new RainDrop(this.simulator, pos, size);\r\n        }\r\n        if (this.currentTime >= this.nextSpawn)\r\n        {\r\n\r\n        }\r\n        return undefined;\r\n    }\r\n    spawn(pos: vec2, size: number, density = 1)\r\n    {\r\n        return new RainDrop(this.simulator, pos, size, density);\r\n    }\r\n}", "import { minus, Rect, vec2 } from \"zogra-renderer\";\r\nimport { RainDrop } from \"./raindrop\";\r\nimport { JitterOption } from \"./random\";\r\nimport { Spawner } from \"./spawner\";\r\nimport { Time } from \"./utils\";\r\n\r\nexport interface SimulatorOptions\r\n{\r\n    viewport: Rect;\r\n    /**\r\n     * Time range between two raindrop spwan.\r\n     */\r\n    spawnInterval: [number, number];\r\n    /**\r\n     * Random size range when spawn a new raindrop\r\n     */\r\n    spawnSize: [number, number];\r\n    /**\r\n     * Maximal amount of spawned raindrops.\r\n     * Recommend less than 2000\r\n     */\r\n    spawnLimit: number;\r\n    /**\r\n     * Recommend in range (0..1), other value should be ok.\r\n     */\r\n    slipRate: number;\r\n    /**\r\n     * Describe how often a raindrop change its motion state\r\n     */\r\n    motionInterval: [number, number];\r\n    /**\r\n     * Random velociy x relative to velocity y. Recommend in range (0..0.1)\r\n     */\r\n    xShifting: [number, number];\r\n    /**\r\n     * Relative size for collision check. Recommend in range (0.6..1.2)\r\n     */\r\n    colliderSize: number;\r\n    /**\r\n     * Mass density of the slipping trail raindrop. \r\n     * Recommend in range (0.1..0.3)\r\n     * \r\n     * A large value cause a raindrop quickly lose its size during slipping.\r\n     */\r\n    trailDropDensity: number;\r\n    /**\r\n     * Random size range of slipping trail drop. Recommend in range (0.3..0.5)\r\n     */\r\n    trailDropSize: [number, number];\r\n    /**\r\n     * Random distance range between two slipping trail drop. Recommend in range (20..40)\r\n     */\r\n    trailDistance: [number, number];\r\n    /**\r\n     * Vertical spread of a new spawned slipping trail drop. Recommend in range (0.4..0.6)\r\n     */\r\n    trailSpread: number\r\n    /**\r\n     * Spread rate when a new spawned raindrop hit the screen. Recommend in range (0.4..0.7)\r\n     */\r\n    initialSpread: number;\r\n    /**\r\n     * Spread shrink rate per seconds. Recommend in range (0.01..0.02)\r\n     */\r\n    shrinkRate: number;\r\n    /**\r\n     * Spread rate by velocity Y. Recommend in range (0.2..0.4)\r\n     * \r\n     * Raindrop with higher fall speed looks more narrow.\r\n     */\r\n    velocitySpread: number;\r\n    /**\r\n     * Mass lose per second. Recommend in range (10..30)\r\n     */\r\n    evaporate: number;\r\n    /**\r\n     * Gravity acceleration in pixels/s. Recommend 2400\r\n     */\r\n    gravity: number;\r\n}\r\n\r\nexport class CollisionGrid extends Array<RainDrop>\r\n{\r\n    /**@deprecated */\r\n    push(...item :RainDrop[])\r\n    {\r\n        return super.push(...item);\r\n    }\r\n    add(raindrop: RainDrop)\r\n    {\r\n        const len = super.push(raindrop);\r\n        raindrop.gridIdx = len - 1;\r\n        raindrop.grid = this;\r\n    }\r\n    delete(raindrop: RainDrop)\r\n    {\r\n        this[raindrop.gridIdx as number] = this[this.length - 1];\r\n        this[raindrop.gridIdx as number].gridIdx = raindrop.gridIdx;\r\n        this.length--;\r\n        raindrop.gridIdx = -1;\r\n        raindrop.grid = undefined;\r\n    }\r\n}\r\n\r\nexport class RaindropSimulator\r\n{\r\n    options: SimulatorOptions;\r\n    spawner: Spawner;\r\n    raindrops: RainDrop[] = [];\r\n    grid: CollisionGrid[] = [];\r\n    constructor(options: SimulatorOptions)\r\n    {\r\n        this.options = options;\r\n\r\n        this.spawner = new Spawner(this, options);\r\n\r\n        this.resize();\r\n    }\r\n    get gridSize() { return this.options.spawnSize[1] * 0.3 } // max collide distance\r\n\r\n    resize()\r\n    {\r\n        const w = Math.ceil(this.options.viewport.size.x / this.gridSize);\r\n        const h = Math.ceil(this.options.viewport.size.y / this.gridSize);\r\n        let base = 0;\r\n        if (this.grid.length < w * h)\r\n        {\r\n            base = this.grid.length;\r\n            this.grid.length = w * h;\r\n        }\r\n        for (let i = base; i < this.grid.length; i++)\r\n            this.grid[i] = new CollisionGrid();\r\n    }\r\n    gridAt(gridX: number, gridY: number)\r\n    {\r\n        if (gridX < 0 || gridY < 0)\r\n            return undefined;\r\n        const gridWidth = Math.ceil((this.options.viewport.xMax - this.options.viewport.xMin) / this.gridSize);\r\n        const idx = gridY * gridWidth + gridX;\r\n        if (idx >= this.grid.length)\r\n            return undefined;\r\n        return this.grid[idx];\r\n    }\r\n    gridAtWorldPos(x: number, y: number)\r\n    {\r\n        return this.gridAt(...this.worldToGrid(x, y));\r\n    }\r\n    worldToGrid(x: number, y: number): [number, number]\r\n    {\r\n        const gridX = Math.floor(x / this.gridSize);\r\n        const gridY = Math.floor(y / this.gridSize);\r\n        return [gridX, gridY];\r\n    }\r\n    add(raindrop: RainDrop)\r\n    {\r\n\r\n        this.raindrops.push(raindrop);\r\n        let grid = this.gridAtWorldPos(raindrop.pos.x, raindrop.pos.y);\r\n        if (grid)\r\n        {\r\n            grid.add(raindrop);\r\n            raindrop.gridIdx = grid.length - 1;\r\n        }\r\n    }\r\n\r\n    update(time: Time)\r\n    {\r\n        if (this.raindrops.length <= this.options.spawnLimit)\r\n        {\r\n            for (const newDrop of this.spawner.update(time.dt).trySpawn())\r\n            {\r\n                this.raindrops.push(newDrop); \r\n            }\r\n        }\r\n\r\n        this.raindropUpdate(time);\r\n        this.collisionUpdate();\r\n\r\n        for (let i = 0; i < this.raindrops.length; i++)\r\n        {\r\n            if (this.raindrops[i].destroied)\r\n            {\r\n                this.raindrops[i].grid?.delete(this.raindrops[i]);\r\n                this.raindrops[i] = this.raindrops[this.raindrops.length - 1];\r\n                this.raindrops.length--;\r\n            }\r\n        }\r\n    }\r\n\r\n    raindropUpdate(time: Time)\r\n    {\r\n        for (let i = 0; i < this.raindrops.length; i++)\r\n        {\r\n            const raindrop = this.raindrops[i];\r\n            if (raindrop.destroied)\r\n                continue;\r\n            \r\n            raindrop.updateRaindrop(time);\r\n            if (raindrop.pos.y < -100)\r\n                raindrop.destroied = true;\r\n            \r\n\r\n            if (raindrop.destroied)\r\n                continue;\r\n\r\n\r\n            const [gridX, gridY] = this.worldToGrid(raindrop.pos.x, raindrop.pos.y);\r\n            const grid = this.gridAt(gridX, gridY);\r\n            if (grid !== raindrop.grid)\r\n            {\r\n                raindrop.grid?.delete(raindrop);\r\n                grid?.add(raindrop);\r\n                raindrop.grid = grid;\r\n            }\r\n        }\r\n    }\r\n\r\n    collisionUpdate()\r\n    {\r\n        for (let i = 0; i < this.raindrops.length; i++)\r\n        {\r\n            const raindrop = this.raindrops[i];\r\n\r\n            if (raindrop.destroied)\r\n                continue;\r\n            \r\n            const [gridX, gridY] = this.worldToGrid(raindrop.pos.x, raindrop.pos.y);\r\n\r\n            for (let x = -1; x <= 1; x++)\r\n            {\r\n                for (let y = -1; y <= 1; y++)\r\n                {\r\n                    const grid = this.gridAt(gridX + x, gridY + y);\r\n                    if (!grid)\r\n                        continue;\r\n\r\n                    for (const other of grid)\r\n                    {\r\n                        const isSame = other === raindrop;\r\n                        const isParent = other.parent === raindrop || raindrop.parent === other;\r\n                        const isAdjacent = raindrop.parent && (raindrop.parent === other.parent);\r\n                        if (other.destroied || isParent || isAdjacent || isSame)\r\n                            continue;\r\n\r\n                        let dx = raindrop.pos.x - other.pos.x;\r\n                        let dy = raindrop.pos.y - other.pos.y;\r\n                        let distance = Math.sqrt(dx * dx + dy * dy);\r\n                        if (distance - raindrop.mergeDistance - other.mergeDistance < 0)\r\n                        {\r\n                            if (raindrop.mass >= other.mass)\r\n                            {\r\n                                raindrop.merge(other);\r\n                                other.destroied = true;\r\n                            }\r\n                            else\r\n                            {\r\n                                other.merge(raindrop);\r\n                                raindrop.destroied = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
